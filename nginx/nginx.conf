# File: nginx/nginx.conf

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
  worker_connections 4096;
  use epoll;
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Logging
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  'rt=$request_time uct="$upstream_connect_time" '
                  'uht="$upstream_header_time" urt="$upstream_response_time"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;

  # Performance
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 20M;

  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

  # Rate limiting zones
  limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=flash_limit:10m rate=5r/s;
  
  # Connection limiting
  limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

  # Upstream API servers
  upstream flash_api {
    least_conn;
    server api-1:3000 max_fails=3 fail_timeout=30s;
    server api-2:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
  }

  server {
    listen 80;
    server_name localhost;
    
    # Health check endpoint (no rate limiting)
    location /health {
      access_log off;
      proxy_pass http://flash_api;
      proxy_set_header Host $host;
    }

    # Flash sale endpoint (strict rate limiting)
    location /api/v1/flash/ {
      limit_req zone=flash_limit burst=20 nodelay;
      limit_conn conn_limit 10;

      # CORS headers (adjust for production)
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

      if ($request_method = 'OPTIONS') {
        return 204;
      }

      proxy_pass http://flash_api;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Timeouts
      proxy_connect_timeout 5s;
      proxy_send_timeout 10s;
      proxy_read_timeout 10s;
    }

    # General API endpoints (moderate rate limiting)
    location /api/ {
      limit_req zone=api_limit burst=50 nodelay;
      limit_conn conn_limit 20;

      proxy_pass http://flash_api;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      proxy_connect_timeout 10s;
      proxy_send_timeout 30s;
      proxy_read_timeout 30s;
    }

    # Metrics endpoint (internal only)
    location /metrics {
      allow 10.0.0.0/8;  # Internal network
      allow 172.16.0.0/12;
      allow 192.168.0.0/16;
      deny all;
      proxy_pass http://flash_api;
    }
  }
}

